@model IEnumerable<Contact>

@{
    ViewData["Title"] = "Ваши контакты";
}

<form>

    @if (Model?.Count() == 0)
    {
        <h1 class="my-5 text-center">There is no one contact</h1>
    }
    else
    {

        <h1 class="my-5 text-center">@ViewData["Title"]</h1>
        <div class="container mt-5">
            <table class="table table-striped table-dark">
                <thead>
                <tr>
                    <th class="px-5">Name</th>
                    <th>Phone number</th>
                    <th>Job title</th>
                    <th>Birth date</th>
                    <th>Action</th>
                </tr>
                </thead>

                <input id="contact-id-action" hidden/>

                @foreach (var contact in Model)
                {
                    <tr class="shadow-lg py-2 mb-4">
                        <td class="px-5">@contact.Name</td>
                        <td>@contact.MobilePhone</td>
                        <td>@contact.JobTitle</td>
                        <td>@contact.BirthDate.ToString("dd MMMM yyyy")</td>
                        <td>
                            <button class="btn btn-secondary" type="button"
                                    onclick="openModalEdit({ url: '/Contact/EditContact', data: '@contact.Id' })"
                                    data-bs-toggle="ajax-modal" data-bs-target="modalEdit">Edit</button>

                            <button onclick="openModalDelete({ url: '/Contact/DeleteContact', data: '@contact.Id' })"
                                    data-bs-toggle="ajax-modal" data-bs-target="modalDelete"
                                    class="btn btn-danger" type="button">Delete</button>
                        </td>

                    </tr>
                }
            </table>
        </div>

    }
    <div class="text-center">
        <button onclick="openModalCreate({ url: '/Contact/CreateContact' })"
                data-bs-toggle="ajax-modal" data-bs-target="modalCreate"
                class="btn btn-secondary" type="button">Create</button>
    </div>
</form>

<form id="form-edit" asp-action="EditContact" asp-controller="Contact" method="post">
<div class="modal fade" id="modalEdit" tabindex="-1" role="dialog">
<div class="modal-dialog modal-dialog-centered">
<div class="modal-content">
<div class="modal-header">
    <h4 class="modal-title">Изменить контакт</h4>
    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
</div>
<div class="modal-body">
</div>
    <div class="modal-footer row">
        <button type="submit" id="modal-edit-sumbit" class="btn btn-primary col my-2 mx-4 py-2">Save</button>
        <button type="button" class="btn btn-secondary col my-2 mx-4 py-2" data-bs-dismiss="modal">Close</button>
    </div>
</div>
</div>
</div>
</form>

<form asp-action="DeleteContact" asp-controller="Contact" method="post">
    <div class="modal fade" id="modalDelete" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Удаление контакта</h4>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                </div>
                <div class="modal-footer row">
                    <button type="submit" class="btn btn-danger col my-2 mx-4 py-2">Delete</button>
                    <button type="button" class="btn btn-secondary col my-2 mx-4 py-2" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</form>

<form id="form-create" asp-action="CreateContact" asp-controller="Contact" method="post">
<div class="modal fade" id="modalCreate" tabindex="-1" role="dialog">
<div class="modal-dialog modal-dialog-centered">
<div class="modal-content">
<div class="modal-header">
    <h4 class="modal-title">Создать новый контакт</h4>
    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
</div>
<div class="modal-body">
</div>
    <div class="modal-footer row">
        <button type="submit" class="btn btn-primary col my-2 mx-4 py-2">Create</button>
        <button type="button" class="btn btn-secondary col my-2 mx-4 py-2" data-bs-dismiss="modal">Close</button>
    </div>
</div>
</div>
</div>
</form>

@section Scripts
{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script type="text/javascript">

        function openModalEdit(params) {
            var url = params.url;
            var id = params.data;
            var modal = $("#modalEdit");

            $.ajax({
                type: 'GET',
                url: url,
                data: { 'id': id },
                success: function(response) {
                    $(".modal-body").html(response);
                    modal.modal('show');
                },
                failure: function() {
                    modal.modal('hide');
                }
            });
        }

        function openModalDelete(params) {
            var url = params.url;
            var id = params.data;
            var modal = $("#modalDelete");

            $.ajax({
                type: 'GET',
                url: url,
                data: { 'id': id },
                success: function(response) {
                    $(".modal-body").html(response);
                    modal.modal('show');
                },
                failure: function() {
                    modal.modal('hide');
                }
            });
        }

        function openModalCreate(params) {
            var url = params.url;
            var modal = $("#modalCreate");
            

            $.ajax({
                type: 'GET',
                url: url,
                success: function(response) {
                    $(".modal-body").html(response);
                    modal.modal('show');
                },
                failure: function() {
                    modal.modal('hide');
                }
            });

        }

        $('#form-create').validate({
            rules: {
                Name: {
                    required: true,
                    minlength: 3
                },
                MobilePhone: {
                    required: true,
                    remote: {
                        url: '/Contact/ValidatePhoneNumber',
                        type: 'POST',
                        dataType: 'json',
                        data: {
                            'phoneNumber': function() {
                                return $('#form-create :input[name="MobilePhone"]').val();
                            }
                        }
                    }
                },
                BirthDate: {
                    date: true
                }
            },
            messages: {
                Name: {
                    required: 'Field "Name" is required',
                    minlength: 'Name is too short'
                },
                MobilePhone: {
                    required: 'Field "Mobile phone" is required',
                    remote: 'Incorrect phone format or phone number'
                }
            }
        });


        $('#form-edit').validate({
            rules: {
                Name: {
                    required: true,
                    minlength: 3
                },
                MobilePhone: {
                    required: true,
                    remote: {
                        url: '/Contact/ValidatePhoneNumber',
                        type: 'POST',
                        dataType: 'json',
                        data: {
                            'phoneNumber': function () {
                                return $('#form-edit :input[name="MobilePhone"]').val();
                            }
                        }
                    }
                },
                BirthDate: {
                    date: true
                }
            },
            messages: {
                Name: {
                    required: 'Field "Name" is required',
                    minlength: 'Name is too short'
                },
                MobilePhone: {
                    required: 'Field "Mobile phone" is required',
                    remote: 'Incorrect phone format or phone number'
                }
            }
        });

    </script>
}
